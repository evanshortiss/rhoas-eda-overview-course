quarkus.ssl.native=true
quarkus.kubernetes.deployment-kind=Deployment
quarkus.openshift.deployment-kind=Deployment

mp.messaging.incoming.songs.topic=songs
mp.messaging.incoming.songs.auto.offset.reset=earliest

# Use a unique consumer ID in dev mode to always consume from earliest offset
%dev.mp.messaging.incoming.songs.group.id=${quarkus.uuid}

%dev.kafka.bootstrap.servers=${BOOTSTRAP_SERVER}
%dev.kafka.security.protocol=SASL_SSL

%dev.kafka.sasl.mechanism=OAUTHBEARER
%dev.kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
  oauth.client.id="${CLIENT_ID}" \
  oauth.client.secret="${CLIENT_SECRET}" \
  oauth.token.endpoint.uri="${OAUTH_TOKEN_URL}" ;
%dev.kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

kafka.bootstrap.servers=${BOOTSTRAP_SERVERS}
kafka.security.protocol=SASL_SSL
kafka.sasl.mechanism=PLAIN
kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
  username="${CLIENT_ID}" \
  password="${CLIENT_SECRET}" ;
